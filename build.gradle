plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.2'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'com.palantir.docker' version '0.35.0'
}

jar {
	enabled = true
	baseName 'app'

	manifest {
		attributes(
				//'Main-Class':'com.example.porjectofinalpostgre.PorjectoFinalPostgreApplication'
    		  'Main-Class': 'org.springframework.boot.loader.JarLauncher'
		)
	}


}


group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}
docker {
	name "mycoolapp"
	dockerfile file('src/docker/Dockerfile')
}


dependencies {
	implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.32'

	implementation group: 'net.minidev', name: 'json-smart', version: '2.4.8'
	implementation group: 'net.minidev', name: 'asm', version: '1.0.2'
	implementation 'org.springframework.security:spring-security-oauth2-resource-server:6.0.2'
	implementation 'org.springframework.security:spring-security-oauth2-jose:6.0.2'
	implementation 'org.springframework.security:spring-security-web:6.0.2'
	compileOnly "org.springframework.boot:spring-boot-configuration-processor"
	implementation 'org.springframework.security:spring-security-config:6.0.2'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.oracle.database.jdbc:ojdbc10-production:19.19.0.0'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test:6.0.2'

	testImplementation group: 'io.rest-assured', name: 'spring-mock-mvc', version: '3.0.0'

}

tasks.named('test') {
	useJUnitPlatform()
	testLogging {
		exceptionFormat "full"
		events "started", "skipped", "passed", "failed"
		showStandardStreams true
	}

}
